---
title: "EDA"
format: html
jupyter: python3
---
## Define Your Audience / Stakeholder
This report is made for the strength and training team for the men's basketball team at UVA. Specifically made in mind for Mike Curtis, who is the head of strength and conditioning.

## Define Your Problem Statement
Injuries plague every athlete team, especially as the season progresses. How does a player's position dictate their PlayerLoad and therefore their likelihood of injury?

## Key Variables
Independent variable: "Date" or the time during the season the game was played, will be separated by season (not including the practice dates) 
Dependent Variables: These will be measuring the amount of effort or exertion in a game, such as `Total Acceleration Efforts`, `Total Player Load`, `Player Load per Minute`, `IMA Accel Total`, `IMA Decel Total`, `IMA Jump`, and the `Explosive Efforts`. 

We are also planning on studying how this varies by specific player throughout a season and by the average positions. In order to find this we will use the `About`, `Date`, and `Position` columns.

## Descriptive Statistics & Distributions

### Import all necessary libraries:
```{python}
import pandas as pd 
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
import seaborn as sns
```

### Load the cleaned data sets:
```{python}
df1 = pd.read_csv("./../season1_cleaned.csv")
df2 = pd.read_csv("./../season2_cleaned.csv")
```

### Creating Functions for Plotting and Printing Stats
```{python}
# Function to create a histogram for numerical columns
def hist_stat(col, seasondf):
    # season/column specific:
    color = ''
    season = ''
    # if season 1, make it purple
    if seasondf.equals(df1):
        season = 'Season 1'
        color = 'purple'
    # if season 2, make it green
    elif seasondf.equals(df2):
        season = 'Season 2'
        color = 'green'
    else:
        season = 'Unknown Season'
        color = 'blue'

    # Plot the histogram
    plt.hist(col, bins=30, color=color, alpha=0.5, edgecolor='black')
    # Remove spines
    plt.gca().spines['top'].set_visible(False)
    plt.gca().spines['right'].set_visible(False)
    # Add title
    title = season + " " + col.name + " " + 'Distribution'
    plt.title(title)
    # Add xlabel
    plt.xlabel(col.name)
    plt.show()

    # Print numerical statistics, such as mean, standard deviation, minimum, maximum, and percentiles 
    mean = np.mean(col)
    std = np.std(col)
    min = np.min(col)
    max = np.max(col)
    percentiles = np.percentile(col, [25, 50, 75])
    print("mean:", mean, "\nstd:", std, "\nmin:", min, "\nmax:", max, "\nPercentiles:", percentiles)

# Function to create a histogram for categorical columns
def categorical_stats(col, dataframe):
    color = ''
    season = ''
    # if season 1, make it purple
    if dataframe.equals(df1):
        season = 'Season 1'
        color = 'purple'
    # if season 2, make it green
    elif dataframe.equals(df2):
        season = 'Season 2'
        color = 'green'
    else:
        season = 'Unknown Season'
        color = 'blue'

    # Plot the histogram
    plt.hist(col, color=color, edgecolor='black')
    # Remove spines
    plt.gca().spines['top'].set_visible(False)
    plt.gca().spines['right'].set_visible(False)
    # Add title
    title = season + " " + col.name
    plt.title(title)
    plt.show()
```

#### `Total Player Load` Graphs:
```{python}
hist_stat(df1['Total Player Load'], df1)
hist_stat(df2['Total Player Load'], df2)
```

From the 2 seasons worth of Total Player Load distributions and statistics, it appears:
1. There's a slight positive skew (right skewed) with a high peak towards lower values (less than 50)
2. A smaller peak towards 150 to 175
3. A gradual decline after 200 all the way to 400+ in Total Player Load
4. Percentiles also display this with the 25, 50, 75 percentiles for both seasons
5. Season 1 saw a higher initial peak at near 200 for a low point whereas season 2 saw the highest frequency around 175 for the initial peak.

The distributions were similar, but the initial peaks were different. Therefore, we might want to look more into why total Player Load see this unusual distribution.

#### `Player Load Per Minute` Graphs:
```{python}
hist_stat(df1['Player Load Per Minute'], df1)
hist_stat(df2['Player Load Per Minute'], df2)
```

Compared to Total Player Load, the Player Load Per Minute attains a relatively normal and symmetrical distribution. This indicates that players more see an "average" Player load every minute between 5 to around 12.5 player load / minute whereas total player load varies greatly between players in certain warmup/game groups.

#### `IMA Accel Total` Graphs:
```{python}
hist_stat(df1['IMA Accel Total'], df1)
hist_stat(df2['IMA Accel Total'], df2)
```

#### `IMA Decel Total` Graphs:
```{python}
hist_stat(df1['IMA Decel Total'], df1)
hist_stat(df2['IMA Decel Total'], df2)
```

The `IMA Accel Total Distribution` is more positively/right skewed compared to that of the `IMA Decel Total` when we compare the respective season graphs along with the percentile breakdowns. This is likely due to most players not accelerating or decreasing that often, but rather due to minor movements contributing to slowing down or speeding up. For example, a player could walk forward one step, and this would be seen as an acceleration.

Another contributing factor could be that in `IMA Decel Total` that basketball players also back pedal during games/warm-ups. Catapult sensors might have a hard time understanding that facing one direction while accelerating in the opposite is possible. So in `IMA Decel Total`, we might see a second small peak around 30 for both because the sensors think the person is deccelerating when they're accelerating in a back pedal.

#### `IMA Jump Count Low Band` Graphs:
```{python}
hist_stat(df1['IMA Jump Count Low Band'], df1)
hist_stat(df2['IMA Jump Count Low Band'], df2)
```

#### `IMA Jump Count Med Band` Graphs:
```{python}
hist_stat(df1['IMA Jump Count Med Band'], df1)
hist_stat(df2['IMA Jump Count Med Band'], df2)
```

#### `IMA Jump Count High Band` Graphs:
```{python}
hist_stat(df1['IMA Jump Count High Band'], df1)
hist_stat(df2['IMA Jump Count High Band'], df2)
```

Overall, all of the IMA Jump Counts (low/med/high), experienced a right skew. It appears we have a higher amount of lower bands as the maximums were much higher (67 and 70 for season 1 and 2 respectively) compared to that of low and high bands. 

This means there are some extreme outliers/observations that can contribute to analysis. For example, we might be able to look into which players induced these extreme outlier observations and then examine if there's something different in their training regime that we can add to other player regimes.

Another reasoning for this positive skew is that players often observe a lack of low/med/high counts in terms of bands compared to experiencing these bands. We might need to take a look at the higher counts for each band to take a look at what's different about these types of events (warm-up/game) compared to that of the lower counted bands.

#### `Explosive Efforts` Graphs:
```{python}
hist_stat(df1['Explosive Efforts'], df1)
hist_stat(df2['Explosive Efforts'], df2)
```

In `Explosive Efforts`, it appears we have yet another positively skewed distribution. In Season 1, we see a lower frequency for the minimum (0) compared to that of Season 2. Otherwise, the shape of the rest of the distribution remains relatively similar.

This may be a result of players not experiencing any `Explosive Efforts`. We might want to take a look at the wins/losses of games in season 1 and 2. Allowing us to compare successes across seasons. This would allow us to see a possible correlation with non-explosive efforts in both seasons. There might be a correlation, but as of now we're not sure what the correlation might be.

#### `Position` Graphs:
```{python}
categorical_stats(df1['Position'], df1)
categorical_stats(df2['Position'], df2)

print(df1['Position'].unique())
```

Consistently, we see more observations under Guard than in Forward and in Center (ordered in descending order). This might indicate that warmups/movement prep/game periods witnessed more guards activity than that of the other positions. We might be able to explore how this impacts the guards during gamedays/warmups, and if we should be focusing attentions on the other positions in this manner.

#### `Period` Graphs:
```{python}
categorical_stats(df1['Period'], df1)
categorical_stats(df2['Period'], df2)

print(df1['Period'].unique())
```

A couple things to note is that Warm Up experienced higher observations. Movement prep, while even with number of observations in Season 1, experienced significantly lower observations compared to Period 1 and Period 2 in Season 2. 

### Examine Correlations 

#### Correlations above 0.75:

- `IMA Accel Total` and `Total Player Load`(0.86)
- `IMA Decel Total` and `Total Player Load`(0.84)
- `Explosive Efforts` and `Total Player Load`(0.77)
- `IMA Accel Total` and `IMA Decel Total`(0.75)
- `Explosive Efforts` and `IMA Accel Total`(0.84)
- `Explosive Efforts` and `IMA Decel Total`(0.76)

```{python}
# Creating a pairplot for the variables  
sns.pairplot(df2[['Total Player Load', 'Player Load Per Minute', 'IMA Accel Total',
       'IMA Decel Total', 'IMA Jump Count Low Band', 'IMA Jump Count Med Band',
       'IMA Jump Count High Band', 'Explosive Efforts']], plot_kws={'alpha': 0.5})
plt.show()

# Calculating the correlations for the variables
correlation = df2[['Total Player Load', 'Player Load Per Minute', 'IMA Accel Total',
        'IMA Decel Total', 'IMA Jump Count Low Band', 'IMA Jump Count Med Band',
        'IMA Jump Count High Band', 'Explosive Efforts']].corr()
plt.figure(figsize=(10, 8))
# Plotting the correlation in a heatmap 
sns.heatmap(correlation, annot=True, cmap='coolwarm', center=0)
# Adding a title 
plt.title('Correlation between 3 continuous chosen variables')
plt.show()
```

 Correlations above 0.75:

 - `IMA Accel Total` and `Total Player Load`(0.82)
 - `IMA Decel Total` and `Total Player Load`(0.9)
 - `Explosive Efforts` and `Total Player Load`(0.79)
 - `IMA Decel Total` and `IMA Accel Total`(0.75)
 - `Explosive Efforts` and `IMA Accel Total`(0.84)
 - `Explosive Efforts` and `IMA Decel Total`(0.84)

 Negative Correlations:

 - `IMA Jump Count Med Band` and `Player Load per Minute`(-0.41)
 - `IMA Jump Count High Band` and `Player Load per Minute`(-0.064)
 - `IMA Accel Total` and `IMA Jump Count Med Band`(-0.014)
 - `IMA Jump Count Low Band` and `IMA Jump Count Med Band`(-0.054)
 - `Explosive Efforts` and `IMA Jump Count Med Band`(-0.19)

 I thought these negative correlations were an interesting factor because they were not seen in the first season's data set.

### Explore Relationships

#### Relationship between `IMA Accel Total` and `Total Player Load`

```{python}
fig, axes = plt.subplots(1, 2, figsize=(12, 5))
# Creating a scatterplot to look at the relationship in season 1 
sns.scatterplot(data=df1, x='IMA Accel Total', y='Total Player Load', ax=axes[0], color='blue')
# Setting title and axis labels 
axes[0].set_title('Season 1 IMA Accel Total vs Total Player Load')
axes[0].set_xlabel('IMA Accel Total')
axes[0].set_ylabel('Total Player Load')

# Creating a scatterplot to look at the relationship in season 2
sns.scatterplot(data=df2, x='IMA Accel Total', y='Total Player Load', ax=axes[1], color='green')
# Setting title and axis labels 
axes[1].set_title('Season 2 IMA Accel Total vs Total Player Load')
axes[1].set_xlabel('IMA Accel Total')
axes[1].set_ylabel('Total Player Load')

plt.tight_layout()
plt.show()
```

Both relationships seem to be positive and strongly correlated.

#### Relationship between `IMA Decel Total` and `Total Player Load`

```{python}
fig, axes = plt.subplots(1, 2, figsize=(12, 5))

# Creating a scatterplot to look at the relationship in season 1 
sns.scatterplot(data=df1, x='IMA Decel Total', y='Total Player Load', ax=axes[0], color='blue')
# Setting title and axis labels 
axes[0].set_title('Season 1 IMA Decel Total vs Total Player Load')
axes[0].set_xlabel('IMA Decel Total')
axes[0].set_ylabel('Total Player Load')

# Creating a scatterplot to look at the relationship in season 2
sns.scatterplot(data=df2, x='IMA Decel Total', y='Total Player Load', ax=axes[1], color='green')
# Setting title and axis labels 
axes[1].set_title('Season 2 IMA Decel Total vs Total Player Load')
axes[1].set_xlabel('IMA Decel Total')
axes[1].set_ylabel('Total Player Load')

plt.tight_layout()
plt.show()
```

Both relationships are highly correlated and seem to have small differences in their trends.

#### Relationship between `Explosive Efforts` and `Total Player Load`
```{python}
fig, axes = plt.subplots(1, 2, figsize=(12, 5))

# Creating a scatterplot to look at the relationship in season 1
sns.scatterplot(data=df1, x='Explosive Efforts', y='Total Player Load', ax=axes[0], color='blue')
# Setting title and axis labels 
axes[0].set_title('Season 1 Explosive Efforts v. Total Player Load')
axes[0].set_xlabel('Explosive Efforts')
axes[0].set_ylabel('Total Player Load')

# Creating a scatterplot to look at the relationship in season 2 
sns.scatterplot(data=df2, x='Explosive Efforts', y='Total Player Load', ax=axes[1], color='green')
# Setting title and axis labels 
axes[1].set_title('Season 2 Explosive Efforts v. Total Player Load')
axes[1].set_xlabel('Explosive Efforts')
axes[1].set_ylabel('Total Player Load')

plt.tight_layout()
plt.show()
```

Both relationships are highly correlated and seem to have small differences in their trends.

#### Relationship between `IMA Decel Total` and `IMA Accel Total`
```{python}
fig, axes = plt.subplots(1, 2, figsize=(12, 5))

# Creating a scatterplot to look at the relationship in season 1
sns.scatterplot(data=df1, x='IMA Decel Total', y='IMA Accel Total', ax=axes[0], color='blue')
# Setting title and axis labels 
axes[0].set_title('Season 1 IMA Decel Total v. IMA Accel Total')
axes[0].set_xlabel('IMA Decel Total')
axes[0].set_ylabel('IMA Accel Total')

# Creating a scatterplot to look at the relationship in season 2
sns.scatterplot(data=df2, x='IMA Decel Total', y='IMA Accel Total', ax=axes[1], color='green')
# Setting title and axis labels 
axes[1].set_title('Season 1 IMA Decel Total v. IMA Accel Total')
axes[1].set_xlabel('IMA Decel Total')
axes[1].set_ylabel('IMA Accel Total')

plt.tight_layout()
plt.show()
```
Both relationships are moderate to strongly correlated and seem to have few differences in their trends.

#### Relationship between `IMA Accel Total` and `Explosive Efforts`
```{python}
fig, axes = plt.subplots(1, 2, figsize=(12, 5))

# Creating a scatterplot to look at the relationship in season 1 
sns.scatterplot(data=df1, x='IMA Accel Total', y='Explosive Efforts', ax=axes[0], color='blue')
# Setting title and axis labels 
axes[0].set_title('Season 1 IMA Accel Total vs Explosive Efforts')
axes[0].set_xlabel('IMA Accel Total')
axes[0].set_ylabel('Explosive Efforts')

# Creating a scatterplot to look at the relationship in season 2
sns.scatterplot(data=df2, x='IMA Accel Total', y='Explosive Efforts', ax=axes[1], color='green')
# Setting title and axis labels 
axes[1].set_title('Season 2 IMA Accel Total vs Explosive Efforts')
axes[1].set_xlabel('IMA Accel Total')
axes[1].set_ylabel('Explosive Efforts')

plt.tight_layout()
plt.show()
```

These correlations are both positive and moderate-highly correlated. Their trends occur to be different with the season 2 data to have a higher trend line.

#### Relationship between `IMA Decel Total` and `Explosive Efforts`
```{python}
fig, axes = plt.subplots(1, 2, figsize=(12, 5))

# Creating a scatterplot to look at the relationship in season 1
sns.scatterplot(data=df1, x='IMA Decel Total', y='Explosive Efforts', ax=axes[0], color='blue')
# Setting title and axis labels 
axes[0].set_title('Season 1 IMA Decel Total vs Explosive Efforts')
axes[0].set_xlabel('IMA Decel Total')
axes[0].set_ylabel('Explosive Efforts')

# Creating a scatterplot to look at the relationship in season 2
sns.scatterplot(data=df2, x='IMA Decel Total', y='Explosive Efforts', ax=axes[1], color='green')
# Setting title and axis labels 
axes[1].set_title('Season 2 IMA Decel Total vs Explosive Efforts')
axes[1].set_xlabel('IMA Decel Total')
axes[1].set_ylabel('Explosive Efforts')

plt.tight_layout()
plt.show()
```

Both the comparisons of `IMA Decel Total` and `IMA Accel Totals` compared to `Explosive Efforts` are very similar. The trends both show the same shape and correlations.

### Looking at negative correlations:

 - `IMA Jump Count Med Band` and `Player Load per Minute`(-0.41)
 - `IMA Jump Count High Band` and `Player Load per Minute`(-0.064)
 - `IMA Accel Total` and `IMA Jump Count Med Band`(-0.014)
 - `IMA Jump Count Low Band and IMA Jump Count Med Band`(-0.054)
 - `Explosive Efforts and IMA Jump Count Med Band`(-0.19)

#### Relationship between `IMA Jump Count Med Band` and `Player Load Per Minute`
```{python}
fig, axes = plt.subplots(1, 2, figsize=(12, 5))

# Creating a scatterplot to look at the relationship in season 1
sns.scatterplot(data=df1, x='IMA Jump Count Med Band', y='Player Load Per Minute', ax=axes[0], color='blue')
# Setting title and axis labels 
axes[0].set_title('Season 2 Jump Count Med Band vs Player Load per Minute')
axes[0].set_xlabel('IMA Jump Count Med Band')
axes[0].set_ylabel('Player Load per Minute')

# Creating a scatterplot to look at the relationship in season 2 
sns.scatterplot(data=df2,x = 'IMA Jump Count Med Band', y='Player Load Per Minute', ax=axes[1], color='green')
# Setting title and axis labels 
axes[1].set_title('Season 2 Jump Count Med Band vs Player Load per Minute')
axes[1].set_xlabel('IMA Jump Count Med Band')
axes[1].set_ylabel('Player Load Per Minute')

plt.tight_layout()
plt.show()
```

These correlations appear to not be overwhelmingly negative but rather just scattered in similar ways with a slight negative skew for the season 2 data. We will not be exploring the lower correlated sets its clear that the negative value is not fully important for the relationships with such small correlations.

#### Exploring the Negative Correlation(0.19) between `IMA Jump Count Med Band` and `Explosive Efforts`

```{python}
fig, axes = plt.subplots(1, 2, figsize=(12, 5))

# Creating a scatterplot to look at the relationship in season 1 
sns.scatterplot(data=df1, x='IMA Jump Count Med Band', y='Explosive Efforts', ax=axes[0], color='blue')
# Setting titles and axis labels 
axes[0].set_title('Season 1 Jump Count High Band vs Player Load')
axes[0].set_xlabel('IMA Jump Count Med Band')
axes[0].set_ylabel('Explosive Efforts')

# Creating a scatterplot to look at the relationship in season 2 
sns.scatterplot(data=df2,x = 'IMA Jump Count Med Band', y='Explosive Efforts', ax=axes[1], color='green')
# Setting titles and axis labels 
axes[1].set_title('Season 2 Jump Count High Band vs Player Load')
axes[1].set_xlabel('IMA Jump Count Med Band')
axes[1].set_ylabel('Explosive Efforts')

plt.tight_layout()
plt.show()
```

The correlation between `IMA Jump Count Med Band` and `Explosive Efforts` is different for both the season 1 data(0.076) and the season 2 data(-0.19). This raises the question of a potential different play style, or energy exertion during the games. 

#### Statistical Analysis of `IMA Jump Count Med Band` and `Explosive Efforts`

```{python}
# Creating a third dataframe to compare IMA Jump Count Med Band across both seasons 
df3= pd.DataFrame({
    'IMA Jump Count Med Band': pd.concat([df1['IMA Jump Count Med Band'], df2['IMA Jump Count Med Band']], ignore_index=True),
    'Season': ['Season 1'] * len(df1) + ['Season 2'] * len(df2)
})

plt.figure(figsize=(8, 6))
# Creating boxplot to compare IMA Jump Count Med Band across seasons 
sns.boxplot(data=df3, x='Season', y='IMA Jump Count Med Band', hue='Season' palette='spring')
# Adding title and axis labels 
plt.ylabel('IMA Jump Count Med Band')
plt.title('IMA Jump Count Med Band: Season 1 vs Season 2')
plt.grid(axis='y')
plt.show()
```

It appears that the season 1 data has a larger spread then compared to season 2. Though, the IQR is larger in the season 2 data, meaning the values have more variability in this middle range. The mean of the seasn 2 data is also slightly larger then the season 1 data.

```{python}
# Creating a third dataframe to compare Explosive Efforts across both seasons 
df3= pd.DataFrame({
    'Explosive Efforts': pd.concat([df1['Explosive Efforts'], df2['Explosive Efforts']], ignore_index=True),
    'Season': ['Season 1'] * len(df1) + ['Season 2'] * len(df2)
})

plt.figure(figsize=(8, 6))
# Creating boxplot to compare Explosive Efforts across seasons 
sns.boxplot(data=df3, x='Season', y='Explosive Efforts', hue='Season', palette='spring')
# Adding title and axis labels 
plt.ylabel('Explosive Efforts')
plt.title('Explosive Efforts: Season 1 vs Season 2')
plt.grid(axis='y')
plt.show()
```

 The spread of `Explosive Efforts` is larger in the season 1 data, but the IQR is significantly larger in the season 2 data. This means that the data has more variability in the mid range of `Explosive Efforts`. The mean is also larger in the season 2 data, meaning players in season 1 had fewer `Explosive Efforts`.